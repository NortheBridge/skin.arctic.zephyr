<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_58_Cards">
		<description>List View (id=58)</description>
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(58)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="group">
				<control type="panel" id="58">
					<visible>Container.Content(musicvideos) | Container.Content(movies) | Container.Content(tvshows) | [Container.Content(episodes) + !substring(Container.FolderPath,plugin://,left)] | Container.Content(actors) | Container.Content(sets) | Container.Content(seasons)</visible>
					<top>206</top>
					<height>660</height>
					<left>70</left>
					<right>70</right>
					<onup>58</onup>
					<ondown>58</ondown>
					<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
					<onright>60</onright>
					<orientation>vertical</orientation>
					<pagecontrol>60</pagecontrol>
					<preloaditems>2</preloaditems>
					<viewtype label="31198">list</viewtype>
					<scrolltime tween="quadratic">400</scrolltime>
					<itemlayout width="890" height="330" condition="!Container.Content(episodes)">
						<control type="image">
							<left>10</left>
							<top>10</top>
							<right>10</right>
							<bottom>10</bottom>
							<texture colordiffuse="Dark4" border="5">common/box.png</texture>
						</control>
						<control type="image">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
						<control type="image">
							<left>10</left>
							<top>10</top>
							<width>207</width>
							<height>310</height>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture diffuse="diffuse/cardposter.png" background="true">$VAR[PosterImage]</texture>
						</control>
						<control type="label">
							<left>237</left>
							<right>64</right>
							<top>20</top>
							<height>50</height>
							<align>left</align>
							<font>SmallBold</font>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="textbox">
							<left>237</left>
							<right>30</right>
							<top>70</top>
							<height>188</height>
							<align>justify</align>
							<font>Tiny</font>
							<autoscroll>false</autoscroll>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label>$VAR[LabelPlotBox]</label>
						</control>
						<control type="label">
							<left>237</left>
							<right>30</right>
							<bottom>20</bottom>
							<aligny>center</aligny>
							<height>38</height>
							<align>right</align>
							<font>Tiny</font>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label fallback="19055">$VAR[LabelYear,, • ]$VAR[LabelDuration,, • ]$INFO[ListItem.Rating]</label>
						</control>
					</itemlayout>
					<itemlayout width="890" height="330" condition="Container.Content(episodes)">
						<control type="image">
							<left>10</left>
							<top>10</top>
							<right>10</right>
							<bottom>10</bottom>
							<texture colordiffuse="Dark4" border="5">common/box.png</texture>
						</control>
						<control type="image">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
						<control type="image">
							<left>10</left>
							<top>10</top>
							<width>400</width>
							<height>310</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture diffuse="diffuse/cardthumb.png" background="true">$VAR[FanartImage]</texture>
						</control>
						<control type="label">
							<left>430</left>
							<right>64</right>
							<top>20</top>
							<height>50</height>
							<align>left</align>
							<font>SmallBold</font>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="textbox">
							<left>430</left>
							<right>30</right>
							<top>70</top>
							<height>188</height>
							<align>justify</align>
							<font>Tiny</font>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label>$VAR[LabelPlotBoxLong]</label>
						</control>
						<control type="label">
							<left>430</left>
							<right>30</right>
							<bottom>20</bottom>
							<aligny>center</aligny>
							<height>38</height>
							<align>right</align>
							<font>Tiny</font>
							<textcolor>Dark1</textcolor>
							<selectedcolor>Dark1</selectedcolor>
							<label fallback="19055">$VAR[LabelYear,, • ]$VAR[LabelDuration,, • ]$INFO[ListItem.Rating]</label>
						</control>
					</itemlayout>
					<focusedlayout width="890" height="330" condition="!Container.Content(episodes)">
						<control type="button">
							<texturefocus>-</texturefocus>
							<texturenofocus>-</texturenofocus>
							<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
							<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
						</control>
						<control type="image">
							<left>10</left>
							<top>10</top>
							<right>10</right>
							<bottom>10</bottom>
							<texture colordiffuse="Dark1" border="5">common/box.png</texture>
						</control>
						<control type="image">
							<left>10</left>
							<top>10</top>
							<width>207</width>
							<height>310</height>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture diffuse="diffuse/cardposter.png" background="true">$VAR[PosterImage]</texture>
						</control>
						<control type="image">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
						<control type="label">
							<left>237</left>
							<right>74</right>
							<top>20</top>
							<height>50</height>
							<align>left</align>
							<font>SmallBold</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="textbox">
							<left>237</left>
							<right>30</right>
							<top>70</top>
							<height>188</height>
							<align>justify</align>
							<font>Tiny</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label>$VAR[LabelPlotBox]</label>
						</control>
						<control type="label">
							<left>237</left>
							<right>30</right>
							<bottom>20</bottom>
							<aligny>center</aligny>
							<height>38</height>
							<align>right</align>
							<font>Tiny</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label fallback="19055">$VAR[LabelYear,, • ]$VAR[LabelDuration,, • ]$INFO[ListItem.Rating]</label>
						</control>
					</focusedlayout>
					<focusedlayout width="890" height="330" condition="Container.Content(episodes)">
						<control type="image">
							<left>10</left>
							<top>10</top>
							<right>10</right>
							<bottom>10</bottom>
							<texture colordiffuse="Dark1" border="5">common/box.png</texture>
						</control>
						<control type="image">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<aspectratio aligny="top">keep</aspectratio>
							<texture>$VAR[PercentWatched]</texture>
							<visible>!stringcompare(ListItem.Label,..)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[PlayingColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[WatchedColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[ResumeColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
						</control>
						<control type="label">
							<right>24</right>
							<top>29</top>
							<width>32</width>
							<height>32</height>
							<font>symbolview</font>
							<label>$VAR[PercentWatchedLabel]</label>
							<textcolor>$VAR[NewColourHighlight]</textcolor>
							<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
						</control>
						<control type="image">
							<left>10</left>
							<top>10</top>
							<width>400</width>
							<height>310</height>
							<aspectratio scalediffuse="false">stretch</aspectratio>
							<texture diffuse="diffuse/cardthumb.png" background="true">$VAR[FanartImage]</texture>
						</control>
						<control type="label">
							<left>430</left>
							<right>74</right>
							<top>20</top>
							<height>50</height>
							<align>left</align>
							<font>SmallBold</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="textbox">
							<left>430</left>
							<right>30</right>
							<top>70</top>
							<height>188</height>
							<align>justify</align>
							<font>Tiny</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label>$VAR[LabelPlotBoxLong]</label>
						</control>
						<control type="label">
							<left>430</left>
							<right>30</right>
							<bottom>20</bottom>
							<aligny>center</aligny>
							<height>38</height>
							<align>right</align>
							<font>Tiny</font>
							<textcolor>Light1</textcolor>
							<selectedcolor>Light1</selectedcolor>
							<label fallback="19055">$VAR[LabelYear,, • ]$VAR[LabelDuration,, • ]$INFO[ListItem.Rating]</label>
						</control>
					</focusedlayout>
				</control>
				<include>Furniture_Scrollbar</include>
			</control>
		</control>
	</include>
</includes>